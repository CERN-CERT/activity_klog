{"name":"Netlog","body":"### Welcome to GitHub Pages.\r\nProduct name: \t\t\tnetlog\r\nDate:\t\t\t\tApr 5 2012\r\nVersion:\t\t\t1.6\r\nVendor:\t\t\t\tCERN\r\nCST Email:\t\t\tcert-sec@cern.ch\r\nLicense: \t\t\tGPLv3\t\r\n\r\n### Description\r\nNetlog is a Loadable Kernel Module that logs information for every connection on the hosted machine.\r\nBy utilizing the kprobes API, it probes the connect and accept system calls ,for TCP connections,\r\nas well as the bind system call, for UDP connections, and the socket destruction. \r\nWhile probing, it logs the process name and process id, the user id that owns this process, the protocol\r\n(TCP/UDP), the local IP address and port as well as the remote IP address and port.\r\n\r\nFor UDP, it tracks only the bind system call, because UDP is a connectionless protocol,\r\nso the other approach was to track the packet communication, something that would\r\nadd a lot of overhead. In order to compile the code that tracks UDP, you \r\nhave to change the symbolic constant (PROBE_UDP) that it's defined in the netlog header (netlog.h) from\r\nzero (0) to a non-zero value (i.e. 1).\r\n\r\nNetlog also tracks the destruction of the sockets. This is done by probing the \r\ninet_shutdown kernel call, which is called after the close system call is called.\r\nIn order to compile the code that tracks the connection close, you need to change the value of the\r\nsymbolic constant (PROBE_CONNECTION_CLOSE) that is defined in the netlog header file (netlog.h) from \r\nzero (0) to a non-zero value (i.e. 1).\r\n\r\nWhitelisting:\r\n\r\nnetlog offers whitelisting of executables. Change the symbolic constant WHITELISTING in netlog.h header\r\nto 0 or 1, if you want to compile or not the whitelisting code accordingly. Then, add the full execution\r\npath of the executables that you are interested in wtelisting at the netlog.h header.\r\n\r\n\r\n### Format of the log messages\r\nTCP connect:\r\nDec 19 14:03:17 panos-PC kernel: netlog: http[3206] TCP 137.138.191.167:52507 -> 130.59.10.36:80 (uid=0)\r\n\r\nTCP accept:\r\nDec 19 14:18:37 panos-PC kernel: netlog: sshd[827] TCP 137.138.191.167:22 <- 137.138.32.18:49904 (uid=0)\r\n\r\nUDP binds:\r\nDec 19 14:22:50 panos-PC kernel: netlog: skype[4261] UDP bind 127.0.0.1:0 (uid=1000)\r\nDec 19 14:22:50 panos-PC kernel: netlog: skype[4261] UDP bind (any IP address):2752 (uid=1000)\r\n\r\nConnection close:\r\nDec 19 14:19:07 panos-PC kernel: netlog: sshd[3755] TCP 137.138.191.167:22 <-> 137.138.32.18:49904 (uid=0)\r\n\r\n###How to compile\r\nIn the source directory run:\r\n\r\n\tmake -C /lib/modules/$(uname -r)/build M=$PWD\r\n\r\nThen run:\r\n\r\n\tinsmod netlog.ko\r\n\r\nin order to insert the module in the kernel.\r\nAnd in order to remove it, run:\r\n\r\n\trmmod netlog\r\n\r\n### Support or Contact\r\n<a href=\"mailto:cert@cern.ch?Subject=Netlog support/contact\">\r\nCERN CERT</a>","tagline":"Netlog is a Loadable Kernel Module that logs information for every connection. With the help of kprobes API, it tracks the connect and accept system calls and  in case that the connection for TCP, it logs the process name and Process ID,  the User ID that owns this process, the protocol (TCP/UDP), the local IP address and port as well as the remote IP address and port.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}